{"version":3,"file":"index.js","sources":["../components/HelloWorld.vue","../components/HelloWorld.vue?vue&type=template&id=763db97b&lang.js","../components/Demo/index.tsx","../components/index.ts"],"sourcesContent":["<template>\n  <h1 class=\"a\">{{ msg }}</h1>\n    <button @click=\"count++\">count is: {{ count }}</button>\n</template>\n\n<script lang=\"ts\">\nimport { ref, defineComponent } from 'vue'\nexport default defineComponent({\n  name: 'HelloWorld',\n  props: {\n    msg: {\n      type: String,\n      required: true\n    }\n  },\n  setup: () => {\n    const count = ref(0)\n    return { count }\n  }\n})\n</script>\n\n<style scoped lang=\"less\">\na {\n  color: #42b983;\n}\n\nlabel {\n  margin: 0 0.5em;\n  font-weight: bold;\n}\n\ncode {\n  background-color: #eee;\n  padding: 2px 4px;\n  border-radius: 4px;\n  color: #304455;\n}\n</style>\n","<template>\n  <h1 class=\"a\">{{ msg }}</h1>\n    <button @click=\"count++\">count is: {{ count }}</button>\n</template>\n\n<script lang=\"ts\">\nimport { ref, defineComponent } from 'vue'\nexport default defineComponent({\n  name: 'HelloWorld',\n  props: {\n    msg: {\n      type: String,\n      required: true\n    }\n  },\n  setup: () => {\n    const count = ref(0)\n    return { count }\n  }\n})\n</script>\n\n<style scoped lang=\"less\">\na {\n  color: #42b983;\n}\n\nlabel {\n  margin: 0 0.5em;\n  font-weight: bold;\n}\n\ncode {\n  background-color: #eee;\n  padding: 2px 4px;\n  border-radius: 4px;\n  color: #304455;\n}\n</style>\n","import { App, defineComponent } from 'vue';\nimport './index.less';\n\nconst Demo = defineComponent({\n  name: 'Demo',\n  setup() {\n    return () => <div class=\"demo\">\n      Demo\n    </div>\n  }\n})\n\nexport default Demo;","//  1、这里导入需要导出的组件，统一处理\nimport { App, DefineComponent } from 'vue';\n\nimport HelloWorld from './HelloWorld.vue';\nimport Demo from './Demo';\n//      1.1、书写Vue插件（保证只引入某一个组件时可用），https://cn.vuejs.org/v2/guide/plugins.html\n// HelloWorld.install = function (Vue: any) {\n//     Vue.component(HelloWorld.name, HelloWorld);\n// };\n\n//  2、遍历注册所有的组件（依赖），全局时使用\nconst components: Array<DefineComponent | any> = [\n  HelloWorld,\n  Demo\n];\n\n// components.forEach(component => {\n//   component.install = (app: App) => app.component(component.name, component);\n// });\n\nconst install = function (Vue: App, opts = {}) {\n    components.forEach(component => {\n      Vue.use(component);\n    });\n    // 这里除了注册组件，还可以做一些其他的东西\n    // 你可以在Vue的原型上扩展一些方法\n    // eg:element-ui\n    //      Vue.prototype.$message = Message;\n    //      使用：this.$message({message:\"xxxxx\",type:\"success\"});\n};\n\n//      可以根据实际情况，是否需要这段代码（CDN引入，便可使用所有组件）\n// @ts-ignore\nif (typeof window !== 'undefined' && window.Vue) {\n  // @ts-ignore\n  install(window.Vue);\n}\n//  3、导出类库的版本、组件、Vue插件需要暴露的install方法\nconst version = '0.0.1';\nexport {\n  version,\n  install,\n  HelloWorld,\n  Demo\n}"],"names":["_createVNode","Demo","defineComponent","name","setup","components","HelloWorld","install","Vue","opts","forEach","component","use","window","version"],"mappings":";;AAOA,aAAe,eAAe,CAAC;IAC7B,IAAI,EAAE,YAAY;IAClB,KAAK,EAAE;QACL,GAAG,EAAE;YACH,IAAI,EAAE,MAAM;YACZ,QAAQ,EAAE;;KAEb;IACD,KAAK,EAAE;QACL,MAAM,QAAQ,GAAG,CAAC,CAAC;QACnB,OAAO,EAAE;;CAEZ;;;;;qBClBK,KAAK,EAAC,GAAG;;;;;IAAbA,kBAAA,4BAAiB;IACfA;MAAS,OAAK,uCAAE,UAAK;OAAI,YAAU,mBAAG;;;;;;;;MCCpCC,IAAI,GAAGC,eAAe,CAAC;AAC3BC,EAAAA,IAAI,EAAE,MADqB;;AAE3BC,EAAAA,KAAK;AACH,WAAO;AAAA,eAAiB;AAAjB,iCAAP;AAGD;;AAN0B,CAAD;;ACG5B;AACA;AACA;AAEA;;AACA,MAAMC,UAAU,GAAiC,CAC/CC,MAD+C,EAE/CL,IAF+C,CAAjD;AAMA;AACA;;MAEMM,OAAO,GAAG,UAAUC,GAAV,EAAoBC,IAAI,GAAG,EAA3B;AACZJ,EAAAA,UAAU,CAACK,OAAX,CAAmBC,SAAS;AAC1BH,IAAAA,GAAG,CAACI,GAAJ,CAAQD,SAAR;AACD,GAFD;AAIA;AACA;AACA;AACA;AACH;AAGD;;;AACA,IAAI,OAAOE,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACL,GAA5C,EAAiD;AAC/C;AACAD,EAAAA,OAAO,CAACM,MAAM,CAACL,GAAR,CAAP;AACD;;;MAEKM,OAAO,GAAG;;;;"}